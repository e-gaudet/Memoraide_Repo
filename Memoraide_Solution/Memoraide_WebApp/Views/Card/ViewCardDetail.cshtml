@model CardViewModel
@{
    ViewData["Title"] = "Card Details";
}




<h2>Card Details</h2>

<h4>To edit the card information, enter new data into Card Front / card back.</h4>
<hr />

@if (TempData["message"] != null)
{
    <div class="alert">
        @TempData["Message"]
    </div>
}

@if (TempData["edit"] != null)
{
    <script>
        ToggleEdit();
    </script>
}


<div class="row">
    <div class="col-md-4">
        @*<form asp-controller="Card" asp-action="ViewCardDetail" method="put">*@
        <form asp-controller="Card" asp-action="ViewCardDetail">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Question" class="control-label"></label>
                <input asp-for="Question" class="form-control" />
                <span asp-validation-for="Question" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Answer" class="control-label"></label>
                <input asp-for="Answer" class="form-control" />
                <span asp-validation-for="Answer" class="text-danger"></span>
            </div>
            
            @Html.LabelFor(m => m.decks)
            @Html.DropDownListFor(m => m.DeckId,
                                        Model.decks,
                                        "Select",
                                        new { @class = "form-control"})
            
            <div class="form-group">
                <label asp-for="ID" class="control-label"></label>
                <input asp-for="ID" class="form-control" readonly="@(true)" />
            </div>
            <div class="form-group">
                <label asp-for="DateCreated" class="control-label"></label>
                <input asp-for="DateCreated" class="form-control" readonly="@(true)" />
            </div>

            <div class="form-group">
                @if (@Model.DeckId != 0)
                {
                    <label>Card Belongs to a deck. </label>
                    <a asp-controller="Deck" asp-action="ViewDeckDetail" asp-route-id="@Model.DeckId" class="btn btn-default">Click to view deck data.</a>
                    @*<a asp-action="ViewDeckDetail" asp-route-id="@deck.ID">View parent deck</a>*@
                }

            </div>
            @*<div class="form-group">
                    <label asp-for="isDeleted" class="control-label"></label>
                    <input asp-for="isDeleted" class="form-control" />
                    <span asp-validation-for="isDeleted" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="DateDeleted" class="control-label"></label>
                    <input asp-for="DateDeleted" class="form-control" />
                    <span asp-validation-for="DateDeleted" class="text-danger"></span>
                </div>*@
            <div class="form-group">
                <!--TODO: onSubmit not working.-->
                <input type="submit" value="Edit" class="btn btn-default" />


            </div>
            @*<div class="form-group">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>*@

        </form>
    </div>
</div>

<div>
    <a asp-action="ViewCard">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
